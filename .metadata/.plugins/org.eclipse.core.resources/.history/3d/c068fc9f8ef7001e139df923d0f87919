//============================================================================
// Name        : main.cpp
// Author      : Alex
// Version     :
//============================================================================

#include <iostream>
#include <fstream>
using namespace std;
////////////////variables//////////////
const int MAX_SIZE_A = 7;
const int MAX_SIZE_B = 9;

const int MAX_SIZE_A = 5;
const int MAX_SIZE_B = 7;


const char* FNAME = "test.txt";

int matrix[MAX_SIZE_A][MAX_SIZE_B];
//////////////////////////////Prototypes//////////////////////////////////////
void print_matrix(int a[MAX_SIZE_A][MAX_SIZE_B]);
void read_console(int a[MAX_SIZE_A][MAX_SIZE_B]);
int read_file(int a[MAX_SIZE_A][MAX_SIZE_B], const char* NAME);
int get_option();//asking user which method of entering string he prefers

int main() {
	if (get_option() == 1)
	{
		if (!read_file(matrix,FNAME)) {
			return -1;
		}
	}
	else {
		read_console(matrix);
	}
	//print_matrix(matrix);
	//------------------------------------------------------------------------------------------------------------------------------------------------------//
	//                                             1 and 2:  find multiply of rows with no "0" and max of these multiplies                                  //
	//------------------------------------------------------------------------------------------------------------------------------------------------------//
}
void tasks(int a[MAX_SIZE_A][MAX_SIZE_B]){

}
void print_matrix(int a[MAX_SIZE_A][MAX_SIZE_B]) {
	for (int i = 0; i < MAX_SIZE_A; i++)
	{
		for (int j = 0; j < MAX_SIZE_B; j++)
		{
			cout << matrix[i][j] << "\t";
		}
		cout << endl;
	}
}
void read_console(int a[MAX_SIZE_A][MAX_SIZE_B]) {
	for (int i = 0; i < MAX_SIZE_A; i++)//getting digits one by one
	{
		for (int j = 0; j < MAX_SIZE_B; j++)
		{
			cin >> matrix[i][j];
		}
	}
}
int read_file(int a[MAX_SIZE_A][MAX_SIZE_B],const char* NAME) {
	//////////////////////////FILE///////////////////////////////////////
	ifstream fin(NAME);//open file

	/////////EXISTANCE////////////////////////////////////////
	if (!fin)
	{
		fin.close();
		return -1;
	} // end if
	///////////NOT EMPTY//////////////////////////////////
	if (fin.eof()) 	//empty
	{
		fin.close();
		return -2;
	} // end if

	/////////////////////////READ/////////////////////////
	for (int i = 0; i < MAX_SIZE_A; i++)//getting digits one by one
	{
		for (int j = 0; j < MAX_SIZE_B; j++)
		{
			fin >> a[i][j];
		}
	}
	fin.close();
	return 0;
}
int get_option() {
	int option;
	cin >> option;
	return option;
}
